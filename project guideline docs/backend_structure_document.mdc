# Backend Structure Documentation (Updated April 2025)

## Architecture Overview
The backend is centered on Supabase (PostgreSQL) for data storage and authentication, with Flask providing custom API endpoints and AI integration.

## Supabase Integration
- **Authentication:** Supabase Auth (secure, real-time sessions)
- **Database:** Supabase PostgreSQL
- **Real-time Sync:** All logs (shots, weight, side effects) sync instantly
- **Storage:** (Optional) Supabase Storage for files/images

### Key Tables
```
users (
  id uuid PRIMARY KEY,
  name text,
  email text,
  start_date date
)

shots (
  id uuid PRIMARY KEY,
  user_id uuid REFERENCES users(id),
  date date,
  time time,
  location text,
  medication text,
  notes text,
  created_at timestamptz DEFAULT now()
)

weight_logs (
  id uuid PRIMARY KEY,
  user_id uuid REFERENCES users(id),
  date date,
  weight numeric,
  notes text,
  created_at timestamptz DEFAULT now()
)

side_effects (
  id uuid PRIMARY KEY,
  user_id uuid REFERENCES users(id),
  date date,
  effect text,
  severity text,
  notes text,
  created_at timestamptz DEFAULT now()
)
```

- All tables use Row Level Security (RLS) for privacy.
- Real-time subscriptions are enabled for instant UI updates.

## Flask API Endpoints
- **Auth:** (Most handled by Supabase)
- **Health Data:**
  - `GET /weight` - Retrieve weight history
  - `POST /weight` - Log new weight
  - `GET /shots` - Retrieve shot history
  - `POST /shots` - Log new shot
  - `GET /side-effects` - Retrieve side effect history
  - `POST /side-effects` - Log new side effect
- **AI/Coach:**
  - `POST /ai/chat` - Send user query to Gemini AI and return response

## Data Flow
- **Frontend (React Native/Expo)** communicates directly with Supabase for CRUD operations and real-time sync.
- **Flask** is used for advanced analytics, AI chat, and custom middleware.

## Security
- Supabase Auth for user authentication and session management
- RLS policies to ensure users only access their own data
- All API endpoints require authentication

## Extensibility
- Easily add new tables or endpoints for future features (e.g., goals, activity, nutrition)
- Integrate additional AI or analytics services via Flask

---
*This documentation reflects the backend structure and data flow as of April 2025. For schema details, see your Supabase dashboard or migration files.*